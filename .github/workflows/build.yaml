
name: Build

on:
  push:
    # Always build when there are new commits to master
    branches:
      - master

    # Always build release-tags
    tags:
      - 'releases/**'

jobs:
  avoid-concurrent-invocations:
    timeout-minutes: 240
    runs-on: ubuntu-latest
    steps:
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  start-agents:
    needs: [ avoid-concurrent-invocations ]
    name: "Start build agents"
    runs-on: ubuntu-latest
    steps:
      - run: curl ${{ secrets.WATCHDOG_TRIGGER_URL }}

  build-win64:
    needs: [ avoid-concurrent-invocations ]
    name: "Build for Win64"

    runs-on: engine_build_agent

    timeout-minutes: 240

    steps:

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          clean: false
          submodules: 'recursive'
          token: ${{ secrets.ENGINE_GITHUB_PAT }}

      - name: Fetch git repo dependencies
        run: cd UE4; .\Engine\Binaries\DotNET\GitDependencies.exe --force

      # - name: Setup credentials for cloud storage
      #   run: $env:LONGTAIL_GCLOUD_CREDENTIALS | Out-File FetchPrebuiltUE4\application-default-credentials.json -Encoding ASCII
      #   env:
      #     LONGTAIL_GCLOUD_CREDENTIALS: ${{ secrets.LONGTAIL_GCLOUD_CREDENTIALS }}

      - name: Build Engine (Win64)
        run: .\Scripts\Windows\BuildEngine.ps1

      - name: Upload engine as Engine-${{ github.sha }}
        run: |
          if (!(Test-Path -Path ".\longtail-win32-x64.exe")) { Invoke-WebRequest -UseBasicParsing -Uri "https://github.com/DanEngelbrecht/golongtail/releases/download/v0.0.36/longtail-win32-x64.exe" -OutFile "longtail-win32-x64.exe"  }
          & .\longtail-win32-x64.exe upsync "--source-path=UE4/LocalBuilds/Engine/Windows" "--target-path=gs://${{ secrets.ENGINE_GCS_BUCKET }}/store/index/Engine-$${{ github.sha }}.lvi" "--storage-uri=gs://${{ secrets.ENGINE_GCS_BUCKET }}/store"
        env:
          GOOGLE_APPLICATION_CREDENTIALS = ${{ secrets.ENGINE_GCS_BUCKET_CREDENTIALS }}

  stop-agents:
    needs: [ build-win64 ]
    name: "Stop build agents"
    runs-on: ubuntu-latest
    steps:
      - run: curl ${{ secrets.WATCHDOG_TRIGGER_URL }}
